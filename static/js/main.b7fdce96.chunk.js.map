{"version":3,"sources":["components/AddContact/AddContact.module.css","components/SingleContact/SingleContact.module.css","components/FilterContacts/FilterContacts.module.css","redux/actions/itemsAction.js","redux/constants/constants.js","redux/operation/itemsOperation.js","components/AddContact/AddContact.js","components/SingleContact/SingleContact.js","components/AllContacts/AllContacts.js","redux/actions/filterAction.js","components/FilterContacts/FilterContacts.js","components/Alert/Alert.js","App.js","redux/reducers/itemsReducer.js","redux/reducers/filterReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","usersGet","createAction","userAdd","userDelete","options","headers","Phonebook","setShowAlert","useState","name","setName","number","setNumber","contacts","useSelector","state","items","dispatch","useDispatch","className","styles","form","autoComplete","onSubmit","e","preventDefault","find","contact","status","text","setTimeout","length","item","a","axios","post","result","data","console","log","inputName","type","placeholder","value","onChange","target","inputnumber","button","SingleContact","id","userDeleteHandle","delete","deleteUserOption","listItem","contactName","contactNumber","contactButton","onClick","AllContacts","inputFilter","filter","filterContacts","toLowerCase","includes","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","filterEdit","FilterContacts","wrapper","input","Alert","showAlert","App","useEffect","get","in","appear","AddContact","mountOnEnter","unmountOnExit","createReducer","action","payload","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7fdce96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContact_form__42KS-\",\"inputName\":\"AddContact_inputName__2147C\",\"inputnumber\":\"AddContact_inputnumber__2bm_3\",\"button\":\"AddContact_button__2ZxE9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"SingleContact_listItem__2XhsY\",\"contactName\":\"SingleContact_contactName__FFlmz\",\"contactNumber\":\"SingleContact_contactNumber___eOqo\",\"contactButton\":\"SingleContact_contactButton__ZGQAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FilterContacts_wrapper__3c0tu\",\"input\":\"FilterContacts_input__RxUg9\"};","import { GET_USERS, ADD_USER, DELETE_USER } from \"../constants/constants\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const usersGet = createAction(GET_USERS);\r\nexport const userAdd = createAction(ADD_USER);\r\nexport const userDelete = createAction(DELETE_USER);\r\n\r\n// export const userAdd = (value) => ({\r\n//   type: ADD_USER,\r\n//   payload: value,\r\n// });\r\n// export const userDelete = (id) => ({\r\n//   type: DELETE_USER,\r\n//   payload: id,\r\n// });\r\n","export const GET_USERS = \"@items/get\";\r\nexport const ADD_USER = \"@items/add\";\r\nexport const DELETE_USER = \"@item/delete\";\r\nexport const EDIT_FILTER = \"@filter/edit\";\r\n","import axios from \"axios\";\r\nimport { usersGet, userAdd, userDelete } from \"../actions/itemsAction\";\r\n\r\nconst options = {\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n};\r\n\r\nexport const getUserOperation = () => async (dispatch) => {\r\n  try {\r\n    const result = await axios.get(\"http://localhost:3001/contacts\");\r\n    dispatch(usersGet(result.data));\r\n  } catch (error) {\r\n    console.log(\"Something went wrong\");\r\n  }\r\n};\r\n\r\nexport const postUserOperation = (item) => async (dispatch) => {\r\n  try {\r\n    const result = await axios.post(\r\n      \"http://localhost:3001/contacts\",\r\n      item,\r\n      options\r\n    );\r\n    dispatch(userAdd(result.data));\r\n  } catch (error) {\r\n    console.log(\"Something went wrong\");\r\n  }\r\n};\r\n\r\nexport const deleteUserOption = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`http://localhost:3001/contacts/${id}`);\r\n    dispatch(userDelete(id));\r\n  } catch (error) {\r\n    console.log(\"Something went wrong\");\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./AddContact.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { postUserOperation } from \"../../redux/operation/itemsOperation\";\r\n\r\nconst Phonebook = ({ setShowAlert }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const contacts = useSelector((state) => state.items);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const inputName = ({ target }) => {\r\n    setName(target.value);\r\n  };\r\n\r\n  const inputNumber = ({ target }) => {\r\n    setNumber(target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.find((contact) => contact.name === name)) {\r\n      setShowAlert({ status: true, text: \"Contact already exist\" });\r\n      setTimeout(() => {\r\n        setShowAlert({ status: false, text: \"\" });\r\n      }, 2000);\r\n      return;\r\n    }\r\n\r\n    if (name.length < 2) {\r\n      setShowAlert({ status: true, text: \"Name mast content 2 characters\" });\r\n\r\n      setTimeout(() => {\r\n        setShowAlert({ status: false, text: \"\" });\r\n      }, 2000);\r\n      return;\r\n    }\r\n\r\n    const user = { name: name, number: number };\r\n    dispatch(postUserOperation(user));\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} autoComplete=\"off\" onSubmit={submitHandler}>\r\n      <input\r\n        className={styles.inputName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Name\"\r\n        value={name}\r\n        onChange={inputName}\r\n      ></input>\r\n      <input\r\n        className={styles.inputnumber}\r\n        type=\"text\"\r\n        name=\"number\"\r\n        placeholder=\"Nubmer\"\r\n        value={number}\r\n        onChange={inputNumber}\r\n      ></input>\r\n      <button className={styles.button} type=\"submit\">\r\n        Add contacts\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nPhonebook.propTypes = {\r\n  setShowAlert: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Phonebook;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./SingleContact.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteUserOption } from \"../../redux/operation/itemsOperation\";\r\n\r\nconst SingleContact = ({ name, number, id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userDeleteHandle = (id) => {\r\n    dispatch(deleteUserOption(id));\r\n  };\r\n\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <p className={styles.contactName}>{name}</p>\r\n      <p className={styles.contactNumber}>{number}</p>\r\n      <button\r\n        className={styles.contactButton}\r\n        onClick={() => userDeleteHandle(id)}\r\n      >\r\n        X\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nSingleContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default SingleContact;\r\n","import React from \"react\";\r\nimport SingleContact from \"../SingleContact/SingleContact\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./AllContacts.css\";\r\n\r\nconst AllContacts = () => {\r\n  const contacts = useSelector((state) => state.items);\r\n  const inputFilter = useSelector((state) => state.filter);\r\n\r\n  const filterContacts = contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(inputFilter)\r\n  );\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {filterContacts.map(({ name, number, id }) => (\r\n        <CSSTransition key={id} timeout={250} classNames=\"listItem\">\r\n          <SingleContact name={name} number={number} id={id} />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default AllContacts;\r\n","import { EDIT_FILTER } from \"../constants/constants\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterEdit = createAction(EDIT_FILTER);\r\n\r\n// export const filterEdit = (value) => ({\r\n//   type: EDIT_FILTER,\r\n//   payload: value,\r\n// });\r\n","import React from \"react\";\r\nimport styles from \"./FilterContacts.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { filterEdit } from \"../../redux/actions/filterAction\";\r\n\r\nconst FilterContacts = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const editFilter = ({ target }) => {\r\n    dispatch(filterEdit(target.value.toLowerCase()));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        placeholder=\"Find contacts by name\"\r\n        onChange={editFilter}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterContacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Alert.css\";\r\n\r\nconst Alert = ({ showAlert }) => {\r\n  return <div className=\"alert\">{showAlert}</div>;\r\n};\r\n\r\nAlert.propTypes = {\r\n  showAlert: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport AddContact from \"./components/AddContact/AddContact\";\nimport AllContacts from \"./components/AllContacts/AllContacts\";\nimport FilterContacts from \"./components/FilterContacts/FilterContacts\";\nimport Alert from \"./components/Alert/Alert\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUserOperation } from \"./redux/operation/itemsOperation\";\n\nfunction App() {\n  const [showAlert, setShowAlert] = useState({ status: false, text: \"\" });\n\n  const contacts = useSelector((state) => state.items);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUserOperation());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <CSSTransition in={true} appear={true} timeout={500} classNames=\"title\">\n        <h1 className=\"title\">Phonebook</h1>\n      </CSSTransition>\n      <AddContact setShowAlert={setShowAlert} />\n      {contacts.length >= 2 && <FilterContacts />}\n\n      {contacts.length > 0 && <AllContacts />}\n\n      <CSSTransition\n        in={showAlert.status}\n        timeout={250}\n        classNames=\"alert\"\n        mountOnEnter\n        unmountOnExit\n      >\n        <Alert showAlert={showAlert.text} />\n      </CSSTransition>\n    </div>\n  );\n}\n\nexport default App;\n","// import { ADD_USER, DELETE_USER } from \"../constants/constants\";\r\n\r\n// const initialState = [];\r\n\r\n// export default (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case ADD_USER:\r\n//       return [...state, action.payload][...state, action.payload];\r\n//     case DELETE_USER:\r\n//       return state.filter((item) => item.id !== action.payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { usersGet, userAdd, userDelete } from \"../actions/itemsAction\";\r\n\r\nexport default createReducer([], {\r\n  [usersGet]: (state, action) => action.payload,\r\n  [userAdd]: (state, action) => [...state, action.payload],\r\n  [userDelete]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n});\r\n","// import { EDIT_FILTER } from \"../constants/constants\";\r\n\r\n// const initialState = \"\";\r\n\r\n// export default (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case EDIT_FILTER:\r\n//       return action.payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { filterEdit } from \"../actions/filterAction\";\r\n\r\nexport default createReducer(\"\", {\r\n  [filterEdit]: (state, action) => action.payload,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport items from \"./itemsReducer\";\r\nimport filter from \"./filterReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\n// const store = configureStore({\r\n//   reducer: rootReducer,\r\n//   devTools: process.env.NODE_ENV !== \"production\",\r\n// });\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}